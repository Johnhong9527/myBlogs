(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{200:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("定义:用 JavaScript 执行异步网络请求"),a("br"),t._v(" "),a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434499861493e7c35be5e0864769a2c06afb4754acc6000",target:"_blank",rel:"noopener noreferrer"}},[t._v("资料"),a("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.zhihu.com/question/28586791",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎"),a("OutboundLink")],1)]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),a("p",[t._v("        顾名思义就是一个方法是否可以被缓存，此 RFC 里 GET，HEAD 和某些情况下的 POST 都是可缓存的，但是绝大多数的浏览器的实现里仅仅支持 GET 和 HEAD。关于缓存的更多内容可以去看"),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc7234",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC7234"),a("OutboundLink")],1),t._v("。"),a("br")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),a("p",[t._v("get请求传参长度的误区 第一点:get|post请求,都没有长度的限制,get求限制来自于浏览器与服务器")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"basicajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basicajax","aria-hidden":"true"}},[this._v("#")]),this._v(" BasicAjax")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"ajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax","aria-hidden":"true"}},[this._v("#")]),this._v(" Ajax")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code","aria-hidden":"true"}},[this._v("#")]),this._v(" code")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("success")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textarea "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'test-response-text'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  textarea"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("fail")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textarea "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'test-response-text'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  textarea"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Error code: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" code"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" request"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 新建XMLHttpRequest对象")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("XMLHttpRequest"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  request "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  request "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ActiveXObject")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Microsoft.XMLHTTP'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nrequest"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 状态发生变化时，函数被回调")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 成功完成")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 判断响应结果:")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("200")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// 成功，通过responseText拿到响应的文本:")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("success")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// 失败，根据响应码判断失败原因:")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("fail")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// HTTP请求还在继续...")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 发送请求:")]),t._v("\nrequest"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("open")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'GET'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/api/categories'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrequest"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("send")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'请求已发送，请等待响应...'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("通过检测"),a("code",[t._v("window")]),t._v("对象是否有"),a("code",[t._v("XMLHttpRequest")]),t._v("属性来确定浏览器是否支持标准的"),a("code",[t._v("XMLHttpRequest")]),t._v("。注意，不要根据浏览器的"),a("code",[t._v("navigator.userAgent")]),t._v("来检测浏览器是否支持某个"),a("code",[t._v("JavaScript")]),t._v("特性，一是因为这个字符串本身可以伪造，二是通过 IE 版本判断"),a("code",[t._v("JavaScript")]),t._v("特性将非常复杂。"),a("br"),t._v(" "),a("br"),t._v("\n当创建了"),a("code",[t._v("XMLHttpRequest")]),t._v("对象后，要先设置"),a("code",[t._v("onreadystatechange")]),t._v("的回调函数。在回调函数中，通常我们只需通过"),a("code",[t._v("readyState === 4")]),t._v("判断请求是否完成，如果已完成，再根据"),a("code",[t._v("status === 200")]),t._v("判断是否是一个成功的响应。"),a("br"),t._v(" "),a("br"),t._v(" "),a("code",[t._v("XMLHttpRequest")]),t._v("对象的"),a("code",[t._v("open()")]),t._v("方法有 3 个参数，第一个参数指定是"),a("code",[t._v("GET")]),t._v("还是"),a("code",[t._v("POST")]),t._v("，第二个参数指定"),a("code",[t._v("URL")]),t._v("地址，第三个参数指定是否使用异步，默认是"),a("code",[t._v("true")]),t._v("，所以不用写。"),a("br"),t._v(" "),a("br"),t._v("\n注意，千万不要把第三个参数指定为"),a("code",[t._v("false")]),t._v("，否则浏览器将停止响应，直到"),a("code",[t._v("AJAX")]),t._v("请求完成。如果这个请求耗时 10 秒，那么 10 秒内你会发现浏览器处于“假死”状态。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("最后调用 send()方法才真正发送请求。GET 请求不需要参数，POST 请求需要把 body 部分以字符串或者 FormData 对象传进去。"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"get-post-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-post-的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" get | post 的区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"rfc7231-里定义了-http-方法的几个性质："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rfc7231-里定义了-http-方法的几个性质：","aria-hidden":"true"}},[this._v("#")]),this._v(" RFC7231 里定义了 HTTP 方法的几个性质：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"_1-safe-安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-safe-安全","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.Safe - 安全")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("        这里的「安全」和通常理解的「安全」意义不同，如果一个方法的语义在本质上是「只读」的，那么这个方法就是安全的。客户端向服务端的资源发起的请求如果使用了是安全的方法，就不应该引起服务端任何的状态变化，因此也是无害的。 此 RFC 定义，GET, HEAD, OPTIONS 和 TRACE 这几个方法是安全的。但是这个定义只是规范，并不能保证方法的实现也是安全的，服务端的实现可能会不符合方法语义，正如上文说过的使用 GET 修改用户信息的情况。引入安全这个概念的目的是为了方便网络爬虫和缓存，以免调用或者缓存某些不安全方法时引起某些意外的后果。User Agent（浏览器）应该在执行安全和不安全方法时做出区分对待，并给用户以提示。"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"_2-idempotent-幂等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-idempotent-幂等","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.Idempotent - 幂等")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("        幂等的概念是指同一个请求方法执行多次和仅执行一次的效果完全相同。按照 RFC 规范，PUT，DELETE 和安全方法都是幂等的。同样，这也仅仅是规范，服务端实现是否幂等是无法确保的。引入幂等主要是为了处理同一个请求重复发送的情况，比如在请求响应前失去连接，如果方法是幂等的，就可以放心地重发一次请求。这也是浏览器在后退/刷新时遇到 POST 会给用户提示的原因：POST 语义不是幂等的，重复请求可能会带来意想不到的后果。"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h5",{attrs:{id:"_3-cacheable-可缓存性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-cacheable-可缓存性","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.Cacheable - 可缓存性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("总而言之:\nGET 的语义是请求获取指定的资源。GET 方法是安全、幂等、可缓存的（除非有 Cache-ControlHeader 的约束）,GET 方法的报文主体没有任何语义。POST 的语义是根据请求负荷（报文主体）对指定的资源做出处理，具体的处理方式视资源类型而不同。POST 不安全，不幂等，（大部分实现）不可缓存。为了针对其不可缓存性，有一系列的方法来进行优化，以后有机会再研究（FLAG 已经立起）。还是举一个通俗栗子吧，在微博这个场景里，GET 的语义会被用在「看看我的 Timeline 上最新的 20 条微博」这样的场景，而 POST 的语义会被用在「发微博、评论、点赞」这样的场景中。"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("作者：杨光"),s("br"),this._v("\n链接：https://www.zhihu.com/question/28586791/answer/145424285"),s("br"),this._v("\n来源：知乎"),s("br"),this._v("\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"w3school-解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#w3school-解释","aria-hidden":"true"}},[this._v("#")]),this._v(" w3school 解释")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("比较 GET 与 POST"),s("br"),this._v("\n下面的表格比较了两种 HTTP 方法：GET 和 POST。"),s("br")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("GET")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("POST")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("后退按钮/刷新")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("无害")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数据会被重新提交（浏览器应该告知用户数据会被重新提交）。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("书签")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("可收藏为书签")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不可收藏为书签")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("缓存")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("能被缓存")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不可收藏为书签")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("编码类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("application/x-www-form-urlencoded")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("application/x-www-form-urlencoded 或 multipart/form-data。为二进制数据使用多重编码。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("历史")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("参数保留在浏览器历史中。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("参数不会保存在浏览器历史中。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("对数据长度的限制")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("是的。当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大长度是 2048 个字符）。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("无限制。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("对数据类型的限制")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("只允许 ASCII 字符。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("没有限制。也允许二进制数据。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("安全性")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。"),a("br"),t._v("在发送密码或其他敏感信息时绝不要使用 GET ！")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("可见性")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数据在 URL 中对所有人都是可见的。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数据不会显示在 URL 中。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("#####补充一个 get 和 post 在缓存方面的区别:\n1.get 请求类似于查找的过程，用户获取数据，可以不用每次都与数据库连接，所以可以使用缓存。"),s("br"),this._v("\n2.post 不同，post 做的一般是修改和删除的工作，所以必须与数据库交互，所以不能使用缓存。因此 get 请求适合于请求缓存。"),s("br")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充","aria-hidden":"true"}},[this._v("#")]),this._v(" 补充")])}],!1,null,null,null);e.options.__file="BasicAjax.md";s.default=e.exports}}]);